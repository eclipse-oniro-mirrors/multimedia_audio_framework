# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../../../../../accessibility.gni")
import("../../../../../../appgallery.gni")
import("../../../../../../bluetooth_part.gni")
import("../../../../../../config.gni")

group("audio_policy_ipc_proxy_unittest_packages") {
  testonly = true
  deps = [
    ":audio_policy_client_holder_unit_test",
  ]
}

audio_framework_root = "../../../../../.."
module_output_path = "audio_framework/audio_framework_policy/audio_policy"

ohos_unittest("audio_policy_client_holder_unit_test") {
  module_out_path = module_output_path

  include_dirs = [
    "./unittest/audio_policy_client_holder_unit_test/include",
    "../../../include",
  ]

  use_exceptions = true

  cflags = [
    "-Wall",
    "-Werror",
    "-Wno-macro-redefined",
    "-fno-access-control",
  ]

  cflags_cc = cflags
  cflags_cc += [ "-fno-access-control" ]

  sanitize = {
    cfi = true
    cfi_cross_dso = false
    boundary_sanitize = true
    debug = false
    integer_overflow = true
    ubsan = false
    blocklist = "${audio_framework_root}/cfi_blocklist.txt"
  }

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libprivacy_sdk",
    "access_token:libtokenid_sdk",
    "access_token:libtokensetproc_shared",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "googletest:gmock",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  sources = [ "./unittest/audio_policy_client_holder_unit_test/src/audio_policy_client_holder_unit_test.cpp" ]

  deps = [ 
    "../../../../../audio_policy:audio_policy_service_static",
    "../../../../../audio_service/idl:audio_framework_interface",
    ]
}
