/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package OHOS.AudioStandard;

sequenceable audio_device_descriptor..OHOS.AudioStandard.AudioDeviceDescriptor;
interface IStandardAudioRoutingManagerListener {
    [ipccode 1] void OnDistributedRoutingRoleChange([in] sharedptr<AudioDeviceDescriptor> descriptor, [in] int type); // CastType type
    void OnAudioOutputDeviceRefined([inout] List<sharedptr<AudioDeviceDescriptor>> descs,
        [in] int routerType, [in] int streamUsage, [in] int clientUid, [in] int audioPipeType); // RouterType routerType,  StreamUsage streamUsage, AudioPipeType audioPipeType
    void OnAudioInputDeviceRefined([inout] List<sharedptr<AudioDeviceDescriptor>> descs,
        [in] int routerType, [in] int sourceType, [in] int clientUid, [in] int audioPipeType); // SourceType sourceType, AudioPipeType audioPipeType
    void GetSplitInfoRefined([out] String splitInfo);
    void OnDistributedOutputChange([in] boolean isRemote);
}
