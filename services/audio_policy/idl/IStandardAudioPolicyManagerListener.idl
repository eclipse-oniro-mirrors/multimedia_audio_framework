/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package OHOS.AudioStandard;

sequenceable audio_device_info..OHOS.AudioStandard.VolumeBehavior;
sequenceable audio_interrupt_info..OHOS.AudioStandard.InterruptEventInternal;
sequenceable audio_policy_interface..OHOS.AudioStandard.DeviceChangeAction;

interface IStandardAudioPolicyManagerListener {
    [ipccode 1, oneway] void OnInterrupt([in] InterruptEventInternal interruptEvent);
    [customMsgOption flags=MessageOption::TF_ASYNC_WAKEUP_LATER | MessageOption::TF_ASYNC]
    void OnRouteUpdate([in] unsigned int routeFlag, [in] String networkId);
    [customMsgOption flags=MessageOption::TF_ASYNC_WAKEUP_LATER | MessageOption::TF_ASYNC]
    void OnAvailableDeviceChange([in] unsigned int usage, [in] DeviceChangeAction deviceChangeAction);
    void OnQueryClientType([in] String bundleName, [in] unsigned int uid, [out] boolean ret);
    void OnCheckClientInfo([in] String bundleName, [out] int uid, [in] int pid, [out] boolean ret);
    void OnCheckVKBInfo([in] String bundleName, [out] boolean isValid);
    void OnQueryAllowedPlayback([in] int uid, [in] int pid, [out] boolean ret);
    [oneway] void OnBackgroundMute([in] int uid);
    void OnQueryBundleNameIsInList([in] String bundleName, [in] String listType, [out] boolean ret);
    void OnQueryDeviceVolumeBehavior([out] VolumeBehavior volumeBehavior);
}
