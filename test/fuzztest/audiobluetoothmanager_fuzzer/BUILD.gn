# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/features.gni")
import("//build/test.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")
import("//foundation/multimedia/audio_framework/accessibility.gni")
import("//foundation/multimedia/audio_framework/config.gni")

ohos_fuzztest("AudioBluetoothManagerFuzzTest") {
  module_out_path = "audio_framework/audio_framework"
  fuzz_config_file = "../audiobluetoothmanager_fuzzer"

  include_dirs = [
    "../../../services/audio_policy/server/include/service",
    "../../../services/audio_policy/server/include",
    "../../../../../communication/bluetooth/interfaces/inner_api/include",
  ]

  include_dirs += [ multimedia_audio_framework_pulse_audio ]

  include_dirs += [ multimedia_audio_framework_pulse_audio_src ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]
  configs = [ "../../../services/audio_policy:audio_policy_public_config" ]

  sources = [ "audiobluetoothmanager_fuzzer.cpp" ]

  deps = [ "../../../services/audio_policy:audio_policy_service" ]
  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libprivacy_sdk",
    "access_token:libtoken_setproc",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdi",
    "hdf_core:libpub_utils",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
  if (accessibility_enable == true) {
    external_deps += [ "accessibility:accessibilityconfig" ]
  }
}

group("fuzztest") {
  testonly = true
  deps = [ ":AudioBluetoothManagerFuzzTest" ]
}
