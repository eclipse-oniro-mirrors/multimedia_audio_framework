# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../config.gni")
module_output_path = "audio_framework/audio_framework_route/audio_utils"

ohos_unittest("audio_utils_unit_test") {
  module_out_path = module_output_path
  include_dirs = [
    "../../include",
    "../../../../../interfaces/inner_api/native/audiocommon/include/",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-fno-access-control",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  if (sonic_enable == true) {
    cflags += [ "-DSONIC_ENABLE" ]
  }

  if (sonic_enable == true) {
    external_deps += [ "pulseaudio:sonic" ]
  }

  sources = [
    "../../../audioutils/src/audio_channel_blend.cpp",
    "audio_utils_unit_test.cpp",
    "audio_utils_second_unit_test.cpp",
  ]

  deps = [ "../../../audioutils:audio_utils" ]
}

ohos_unittest("audio_utils_plus_unit_test") {
  module_out_path = module_output_path
  include_dirs = [
    "../../include",
    "../../../../../interfaces/inner_api/native/audiocommon/include/",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-fno-access-control",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  if (sonic_enable == true) {
    cflags += [ "-DSONIC_ENABLE" ]
  }

  if (sonic_enable == true) {
    external_deps += [ "pulseaudio:sonic" ]
  }

  sources = [ "audio_utils_plus_unit_test.cpp" ]

  deps = [ "../../../audioutils:audio_utils" ]
}

ohos_unittest("audio_utils_pro_unit_test") {
  module_out_path = module_output_path
  include_dirs = [
    "../../include",
    "../../../../../interfaces/inner_api/native/audiocommon/include/",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-fno-access-control",
  ]

  external_deps = [
    "c_utils:utils",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  if (sonic_enable == true) {
    cflags += [ "-DSONIC_ENABLE" ]
  }

  if (sonic_enable == true) {
    external_deps += [ "pulseaudio:sonic" ]
  }

  sources = [ "audio_utils_pro_unit_test.cpp" ]

  deps = [ "../../../audioutils:audio_utils" ]
}

ohos_unittest("audio_speed_unit_test") {
  module_out_path = module_output_path
  include_dirs = [
    "../../include",
    "../../../../../interfaces/inner_api/native/audiocommon/include/",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-fno-access-control",
  ]

  external_deps = [
    "c_utils:utils",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  if (sonic_enable == true) {
    cflags += [ "-DSONIC_ENABLE" ]
  }

  if (sonic_enable == true) {
    external_deps += [ "pulseaudio:sonic" ]
  }

  sources = [ "audio_speed_unit_test.cpp" ]

  deps = [ "../../../audioutils:audio_utils" ]
}
