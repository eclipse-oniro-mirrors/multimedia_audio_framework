# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../../config.gni")

module_output_path = "audio_framework/audio_framework_engine/audio_enhance_chain_manager"

ohos_unittest("audio_enhance_unittest") {
  testonly = true
  module_out_path = module_output_path
  include_dirs = [
    "./include",
    "../../../include",
    "../../../../../../interfaces/inner_api/native/audiocommon/include",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-fno-access-control",
  ]

  public_configs = [ "../../../../audioeffect:audio_effect_config" ]

  sources = [
    "src/audio_enhance_chain_manager_unit_test.cpp",
    "src/audio_enhance_chain_unit_test.cpp",
    "src/mock_enhance.cpp",
    "../../../../audioeffect/src/audio_enhance_chain.cpp",
    "../../../../audioeffect/src/audio_enhance_chain_manager_impl.cpp",
    "../../../../audioeffect/src/chain_pool_impl.cpp",
    "../../../../audioeffect/src/thread_handler_impl.cpp",
  ]

  deps = [
    "../../../../../../services/audio_policy:audio_foundation",
    "../../../../../../services/audio_policy:audio_setting_provider",
    "../../../../../../services/audio_service:audio_common",
    "../../../../audioschedule:audio_schedule",
    "../../../../audioutils:audio_utils",
  ]

  external_deps = [
    "c_utils:utils",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "googletest:gmock",
    "googletest:gtest",
    "hilog:libhilog",
    "ipc:ipc_single",
    "os_account:os_account_innerkits",
    "samgr:samgr_proxy",
  ]
}
