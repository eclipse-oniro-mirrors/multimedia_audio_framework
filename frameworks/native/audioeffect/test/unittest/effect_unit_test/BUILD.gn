# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../../config.gni")
import("../../../../../../sensor.gni")

module_output_path = "multimedia_audio_framework/audio_effect_chain_manager"

ohos_unittest("audio_effect_chain_manager_unit_test") {
  testonly = true
  module_out_path = module_output_path
  include_dirs = [
    "./include",
    "../../../include",
    "../../../src",
    "../../../../../../interfaces/inner_api/native/audiocommon/include",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-fno-access-control",
  ]

  sources = [
    "src/audio_effect_chain_adapter_unit_test.cpp",
    "src/audio_effect_chain_manager_unit_test.cpp",
    "src/audio_effect_chain_unit_test.cpp",
    "src/audio_effect_hdi_param_unit_test.cpp",
    "src/audio_effect_volume_unit_test.cpp",
  ]

  deps = [
    "../../../../audioeffect:audio_effect_static",
    "../../../../audioutils:audio_utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:extension_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libprivacy_sdk",
    "access_token:libtokenid_sdk",
    "access_token:libtokensetproc_shared",
    "bounds_checking_function:libsec_shared",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "drivers_interface_audio:libeffect_proxy_1.0",
    "eventhandler:libeventhandler",
    "googletest:gmock",
    "googletest:gtest",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hdf_core:libpub_utils",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "media_foundation:media_monitor_client",
    "media_foundation:media_monitor_common",
    "os_account:os_account_innerkits",
    "power_manager:powermgr_client",
    "pulseaudio:pulse",
    "relational_store:native_appdatafwk",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (sensor_enable == true) {
    cflags += [ "-DSENSOR_ENABLE" ]
    external_deps += [ "sensor:sensor_interface_native" ]
  }

  part_name = "audio_framework"
  subsystem_name = "multimedia"
}
