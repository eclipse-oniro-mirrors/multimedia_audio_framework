# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/audio_framework/config.gni")

ohos_shared_library("pro_audio_service_adapter") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
  }
  install_enable = true

  sources = [
    "src/audio_service_adapter.cpp",
    "src/pro_audio_service_adapter_impl.cpp",
  ]

  cflags = [ "-fPIC" ]
  cflags += [ "-Wall" ]
  cflags += [ "-Os" ]
  cflags_cc = cflags

  include_dirs = [
    "include",
    "../audioutils/include",
    "../audioschedule/include",
    "../../../interfaces/inner_api/native/audiocommon/include",
    "../../../services/audio_service/server/include",
    "../hdiadapter/common/include",
    "../hdiadapter/sink/common",
    "../hdiadapter/source/common",
    "../../../services/audio_engine/manager/include",
    "../../../services/audio_policy/common/include",
    "../../../services/audio_service/common/include",
  ]

  deps = [
    "../../../services/audio_engine:audio_engine_manager",
    "../../../services/audio_service:audio_common",
    "../audioschedule:audio_schedule",
    "../audioutils:audio_utils",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "ipc:ipc_single",
    "media_foundation:media_monitor_client",
    "media_foundation:media_monitor_common",
    "samgr:samgr_proxy",
  ]
  defines = []
  if (!audio_framework_feature_new_engine_flag) {
    external_deps += [
      "pulseaudio:pulse",
    ]

    sources += [ "src/pulse_audio_service_adapter_impl.cpp" ]

    defines += [ "SUPPORT_OLD_ENGINE" ]
  }
  part_name = "audio_framework"
  subsystem_name = "multimedia"
  version_script = "libpulse_audio_service_adapter.versionscript"
}
