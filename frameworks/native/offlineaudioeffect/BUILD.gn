# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../audio_framework_test_sources.gni")
import("../../../config.gni")

config("offline_audio_effect_config") {
  include_dirs = [
    "include",
    "../../../interfaces/inner_api/native/offlineaudioeffect/include",
  ]

  cflags = [
    "-Wall",
    "-Werror",
  ]
}

if (!audio_framework_feature_offline_effect) {
  group("offline_audio_effect") {
    deps = []
  }
} else {
  audio_ohos_library("offline_audio_effect") {
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      cfi_vcall_icall_only = true
      debug = false
      integer_overflow = true
      ubsan = true
      boundary_sanitize = true
    }
    install_enable = true

    sources = [
      "src/offline_audio_effect_chain_impl.cpp",
      "src/offline_audio_effect_manager.cpp",
    ]

    deps = [
      "../../../services/audio_service:audio_client",
      "../audioutils:audio_utils",
    ]

    external_deps = [
      "c_utils:utils",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]

    public_configs = [ ":offline_audio_effect_config" ]
    configs = [ "../../../services/audio_service/idl:audio_service_sa_idl_config" ]

    version_script = "../../../audio_framework.versionscript"
    innerapi_tags = [ "platformsdk" ]

    part_name = "audio_framework"
    subsystem_name = "multimedia"
  }

  audio_ohos_library("offline_audio_effect_service") {
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      cfi_vcall_icall_only = true
      debug = false
      integer_overflow = true
      ubsan = true
      boundary_sanitize = true
    }
    install_enable = true

    include_dirs = [
      "include",
      "../../../interfaces/inner_api/native/audiocommon/include",
      "../../../services/audio_service/common/include",
    ]

    sources = [ "src/offline_audio_effect_server_chain.cpp" ]

    deps = [ "../audioutils:audio_utils" ]

    external_deps = [
      "c_utils:utils",
      "drivers_interface_audio:libeffect_proxy_1.0",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]

    version_script = "../../../audio_framework.versionscript"
    innerapi_tags = [ "platformsdk" ]

    part_name = "audio_framework"
    subsystem_name = "multimedia"
  }
}
